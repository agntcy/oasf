{
  "caption": "Attribute Dictionary",
  "description": "The Attribute Dictionary defines attributes and includes references to the classes and objects in which they are used.",
  "name": "dictionary",
  "attributes": {
    "a2a_capabilities": {
      "caption": "Capabilities",
      "description": "List of capabilities supported by the agent for A2A communication.",
      "type": "string_t",
      "is_array": true,
      "enum": {
        "push_notifications": {
          "caption": "Push Notifications",
          "description": "Indicates whether the agent supports push notifications for A2A communication."
        },
        "streaming": {
          "caption": "Streaming",
          "description": "Indicates whether the agent supports streaming for A2A communication."
        },
        "state_transition_history": {
          "caption": "State Transition History",
          "description": "Indicates whether the agent supports state transition history for A2A communication."
        }
      }
    },
    "a2a_card_data": {
      "caption": "A2A Agent Card Data",
      "description": "Content of the A2A card in JSON format.",
      "type": "json_t"
    },
    "a2a_data": {
      "caption": "A2A Data",
      "description": "Data supported by the agent for A2A.",
      "type": "a2a_data"
    },
    "a2a_input_modes": {
      "caption": "Supported Input Modes",
      "description": "Supported input modes supported by the agent for A2A communication.",
      "type": "string_t",
      "is_array": true,
      "enum": {
        "application/json": {
          "caption": "Application/JSON"
        },
        "text/plain": {
          "caption": "Text/Plain"
        }
      }
    },
    "a2a_output_modes": {
      "caption": "Supported Output Modes",
      "description": "Supported output modes supported by the agent for A2A communication.",
      "type": "string_t",
      "is_array": true,
      "enum": {
        "application/json": {
          "caption": "Application/JSON"
        },
        "application/vnd.geo+json": {
          "caption": "Application/Geo+JSON"
        },
        "image/jpeg": {
          "caption": "Image/JPEG"
        },
        "image/png": {
          "caption": "Image/PNG"
        },
        "text/html": {
          "caption": "Text/HTML"
        }
      }
    },
    "a2a_protocol_version": {
      "caption": "Protocol Version",
      "description": "Version of the A2A protocol used by the agent.",
      "type": "string_t"
    },
    "a2a_security_schemes": {
      "caption": "Supported Security Schemes",
      "description": "Supported security schemes for A2A communication.",
      "type": "string_t",
      "is_array": true,
      "enum": {
        "none": {
          "caption": "None",
          "description": "No security scheme is used."
        },
        "oauth2": {
          "caption": "OAuth2",
          "description": "OAuth2 security scheme for A2A communication."
        },
        "api_key": {
          "caption": "API Key",
          "description": "API Key security scheme for A2A communication."
        },
        "http": {
          "caption": "HTTP Basic",
          "description": "HTTP Basic security scheme for A2A communication."
        },
        "openid": {
          "caption": "OpenID Connect",
          "description": "OpenID Connect security scheme for A2A communication."
        },
        "mtls": {
          "caption": "Mutual TLS",
          "description": "Mutual TLS security scheme for A2A communication."
        }
      }
    },
    "a2a_supported_transports": {
      "caption": "Supported Transports",
      "description": "Supported transport protocols for A2A communication.",
      "type": "string_t",
      "is_array": true,
      "enum": {
        "jsonrpc": {
          "caption": "JSONRPC",
          "description": "JSON-RPC transport protocol for A2A communication."
        },
        "grpc": {
          "caption": "GRPC",
          "description": "gRPC transport protocol for A2A communication."
        },
        "http": {
          "caption": "HTTP+JS",
          "description": "HTTP transport protocol for A2A communication."
        }
      }
    },
    "acp_agent": {
      "caption": "Agent Connect Protocol Specs",
      "description": "Specification of agent capabilities, config, input, output, and interrupts.",
      "type": "agent_connect_protocol"
    },
    "acp_agent_dependencies": {
      "caption": "Agent Dependencies",
      "description": "List of all other agents this agent depends on.",
      "type": "acp_agent_dependency",
      "is_array": true
    },
    "acp_agent_id": {
      "caption": "Agent Identifier",
      "description": "Agent identifier",
      "type": "uuid_t"
    },
    "acp_agent_reference": {
      "caption": "Agent Reference",
      "description": "Reference to the agent in the agent directory.",
      "type": "acp_agent_reference"
    },
    "acp_callbacks": {
      "caption": "Callback Support",
      "description": "This is `true` if the agent supports a webhook to report run results. If this is `false`, providing a `webhook` at run creation has no effect. If missing, it means `false`.",
      "type": "boolean_t"
    },
    "acp_capabilities": {
      "caption": "ACP Capabilities",
      "description": "Declares what invocation features the agent is capable of.",
      "type": "acp_capabilities"
    },
    "acp_custom_objects_streaming": {
      "caption": "Custom Objects Streaming",
      "description": "This is `true` if the agent supports custom objects streaming. If `false` or missing, custom streaming is not supported. Custom Objects streaming consists of a stream of object whose schema is specified by the agent in its manifest under `specs.custom_streaming_update`.",
      "type": "boolean_t"
    },
    "acp_deployment": {
      "caption": "Agent Workflow Server Deployment Manifest",
      "description": "Describe all the details needed to deploy an agent by the Agent Workflow Server.",
      "type": "acp_deployment"
    },
    "acp_deployment_option": {
      "caption": "Deployment Option",
      "description": "Name of the method to instantiate or consume the agent.",
      "type": "string_t"
    },
    "acp_deployment_options": {
      "caption": "Deployment Options",
      "description": "List of possible methods to instantiate or consume the agent. Any of the available option could be used. Every option could be associated with a unique name within this agent. If present, when another manifest refers to this manifest, it can also select the preferred deployment option.",
      "type": "acp_deployment_option",
      "is_enum": true,
      "is_array": true
    },
    "acp_interrupt_support": {
      "caption": "Interrupt Support",
      "description": "This is `true` if the agent runs can interrupt to request additional input and can be subsequently resumed. If missing, it means `false`.",
      "type": "boolean_t"
    },
    "acp_interrupt_type": {
      "caption": "Interrupt Type",
      "description": "Name of this interrupt type. Needs to be unique in the list of interrupts.",
      "type": "string_t"
    },
    "acp_interrupts": {
      "caption": "Interrupts",
      "description": "List of possible interrupts that can be provided by the agent. If `interrupts` capability is true, this needs to have at least one item.",
      "type": "acp_interrupts",
      "is_array": true
    },
    "acp_result_streaming": {
      "caption": "Result Streaming",
      "description": "This is `true` if the agent supports result streaming. If `false` or missing, result streaming is not supported. Result streaming consists of a stream of objects of type `RunResult`, where each one sent over the stream fully replace the previous one.",
      "type": "boolean_t"
    },
    "acp_streaming_modes": {
      "caption": "Streaming Modes",
      "description": "Supported streaming modes. If missing, streaming is not supported. If no mode is supported attempts to stream output will result in an error.",
      "type": "acp_streaming_modes"
    },
    "acp_threads": {
      "caption": "Threads",
      "description": "This is `true` if the agent supports run threads. If this is `false`, then the threads tagged with `Threads` are not available. If missing, it means `false`.",
      "type": "boolean_t"
    },
    "algorithm": {
      "caption": "Algorithm",
      "description": "The algorithm used. See specific usage.",
      "type": "string_t"
    },
    "annotations": {
      "caption": "Annotations",
      "description": "Provides additional metadata associated with the object. See specific usage.",
      "type": "string_map_t"
    },
    "api_base": {
      "caption": "API Base URL",
      "description": "URL of the API base for the LLM model (e.g., 'https://api.openai.com/v1').",
      "type": "string_t"
    },
    "args": {
      "caption": "Arguments",
      "description": "A list of arguments to be passed to a command. See specific usage.",
      "type": "string_t",
      "is_array": true
    },
    "audience": {
      "caption": "Audience",
      "description": "Intended audience(s) for an entity. See specific usage.",
      "type": "string_t",
      "is_array": true
    },
    "authors": {
      "caption": "Author",
      "description": "Specifies the authors list of of the data's record. Values inside the list should satisfy the following grammar: <code>author := author-name <author-email></code>.",
      "type": "string_t",
      "is_array": true
    },
    "certificate": {
      "caption": "Certificate",
      "description": "Base64-encoded signing certificate.",
      "type": "bytestring_t"
    },
    "command": {
      "caption": "Command",
      "description": "A command to be ran. See specific usage.",
      "type": "string_t"
    },
    "communication_protocols": {
      "caption": "Communication Protocols",
      "description": "Communication protocols supported.",
      "type": "string_t",
      "enum": {
        "Otel_OTP_v1": {
          "caption": "Otel OTP v1"
        },
        "HTTP_1.1": {
          "caption": "HTTP 1.1"
        },
        "gRPC": {
          "caption": "gRPC"
        },
        "SLIM": {
          "caption": "SLIM"
        }
      },
      "is_array": true
    },
    "content_bundle": {
      "caption": "Content Bundle",
      "description": "Base64-encoded signature bundle.",
      "type": "bytestring_t"
    },
    "content_type": {
      "caption": "Content Type",
      "description": "Type of the content. See specific usage.",
      "type": "string_t"
    },
    "cost_score": {
      "caption": "Cost Score",
      "description": "Cost score.",
      "type": "float_t"
    },
    "created_at": {
      "caption": "Created Time",
      "description": "The time when the object was created. See specific usage.",
      "type": "datetime_t"
    },
    "data_platform_integrations": {
      "caption": "Data Platform Integrations",
      "description": "Data platforms supported by the agent for observability.",
      "type": "string_t",
      "is_array": true
    },
    "data_points": {
      "caption": "Data Points",
      "description": "The actual data points collected for the metric, which can be a single value or a collection of values over time.",
      "type": "key_value_object",
      "is_array": true
    },
    "default_value": {
      "caption": "Default Value",
      "description": "Default value of the attribute.",
      "type": "string_t"
    },
    "description": {
      "caption": "Description",
      "description": "The description of the entity. See specific usage.",
      "type": "string_t"
    },
    "digest": {
      "caption": "Digest",
      "description": "The digest of the targeted content, conforming to the requirements. Retrieved content SHOULD be verified against this digest when consumed via untrusted sources. The digest property acts as a content identifier, enabling content addressability. It uniquely identifies content by taking a collision-resistant hash of the bytes. If the digest can be communicated in a secure manner, one can verify content from an insecure source by recalculating the digest independently, ensuring the content has not been modified. The value of the digest property is a string consisting of an algorithm portion and an encoded portion. The algorithm specifies the cryptographic hash function and encoding used for the digest; the encoded portion contains the encoded result of the hash function. A digest MUST be calculated for all properties except the digest itself which MUST be ignored during the calculation. The model SHOULD then be updated with the calculated digest.",
      "type": "file_hash_t"
    },
    "domains": {
      "caption": "Domains",
      "description": "Domains that the agent can operate in.",
      "type": "class_t",
      "class_type": "base_domain",
      "family": "domain",
      "is_enum": true,
      "is_array": true
    },
    "env_deps": {
      "caption": "Values for Dependencies",
      "description": "List of environment variable values to be set for the agent dependencies.",
      "type": "env_var_values",
      "is_array": true
    },
    "env_var_values": {
      "caption": "Environment Variable Values",
      "description": "List of values of the environment variables for a specific agent and it's dependencies.",
      "type": "env_var_values",
      "is_array": true
    },
    "env_vars": {
      "caption": "Environment Variables",
      "description": "List of possible environment variables that might be required to be set. See specific usage.",
      "type": "env_var",
      "is_array": true
    },
    "evaluation_data": {
      "caption": "Data",
      "description": "Data supported by the agent for evaluation.",
      "type": "evaluation_data"
    },
    "evaluation_datasets": {
      "caption": "Datasets",
      "description": "Datasets array.",
      "type": "evaluation_dataset",
      "is_array": true
    },
    "evaluation_report": {
      "caption": "Evaluation report",
      "description": "The report of an evaluation.",
      "type": "evaluation_report"
    },
    "export_format": {
      "caption": "Export Format",
      "description": "Format used by the agent for exporting observability data.",
      "type": "string_t"
    },
    "framework_config": {
      "caption": "Agentic Framework Config",
      "description": "Config for an agent of an agentic framework.",
      "type": "agentic_framework_config",
      "is_enum": true
    },
    "framework_type": {
      "caption": "Framework Type",
      "description": "Agent framework type.",
      "type": "string_t"
    },
    "graph": {
      "caption": "Graph",
      "description": "Graph of the framework config.",
      "type": "string_t"
    },
    "headers": {
      "caption": "Headers",
      "description": "Request headers (e.g. for authentication). See specific usage.",
      "type": "string_map_t"
    },
    "id": {
      "caption": "ID",
      "description": "A unique identifier. See specific usage.",
      "type": "integer_t"
    },
    "image": {
      "caption": "Docker Image",
      "description": "The Docker image that pertains to the class or object. See specific usage.",
      "type": "string_t"
    },
    "in": {
      "caption": "In",
      "description": "A location",
      "type": "string_t"
    },
    "llm_model_data": {
      "caption": "Data",
      "description": "Data supported by the agent for LLM model.",
      "type": "llm_model_data"
    },
    "llm_models": {
      "caption": "List of LLM Model Data",
      "description": "Collection of LLM models supported by the agent, including their configurations and parameters.",
      "type": "llm_model",
      "is_array": true
    },
    "llm_prompt_data": {
      "caption": "Data",
      "description": "Data supported by the agent for LLM prompts.",
      "type": "llm_prompt_data"
    },
    "llm_prompts": {
      "caption": "List of LLM Prompts",
      "description": "List of common prompts used for LLM interactions with the agent, including their configurations and parameters.",
      "type": "llm_prompt",
      "is_array": true
    },
    "locator": {
      "caption": "Locator",
      "description": "A locator provides an actual artifact locator. For example, this can reference sources such as helm charts, docker images, binaries, and so on.",
      "type": "locator"
    },
    "locators": {
      "caption": "Locators",
      "description": "Locators provide actual artifact locators of the data's record. For example, this can reference sources such as helm charts, docker images, binaries, and so on.",
      "type": "locator",
      "is_array": true
    },
    "manifest_data": {
      "caption": "Data",
      "description": "Data supported by the agent for runtime manifest.",
      "type": "manifest_data"
    },
    "mcp_data": {
      "caption": "MCP Data",
      "description": "Data supported by the agent for MCP.",
      "type": "mcp_data"
    },
    "mcp_server_capabilities": {
      "caption": "MCP Server Capabilities",
      "description": "Describes the capabilities supported by an MCP server.",
      "type": "string_t",
      "enum": {
        "subscribe": {
          "caption": "The server can subscribe to events."
        },
        "notify": {
          "caption": "The server can notify on events."
        }
      },
      "is_array": true
    },
    "mcp_server_prompts": {
      "caption": "MCP Server Prompts",
      "description": "Describes the configuration for an MCP server prompts.",
      "type": "mcp_server_prompt",
      "is_array": true
    },
    "mcp_server_resources": {
      "caption": "MCP Server Resources",
      "description": "Describes the configuration for an MCP server resources.",
      "type": "mcp_server_resource",
      "is_array": true
    },
    "mcp_server_tools": {
      "caption": "MCP Server Tools",
      "description": "Describes the configuration for an MCP server tools.",
      "type": "mcp_server_tool",
      "is_array": true
    },
    "mcp_servers": {
      "caption": "MCP Servers",
      "description": "Describes the list of MCP servers.",
      "type": "mcp_server",
      "is_array": true
    },
    "metadata": {
      "caption": "Metadata",
      "description": "Metadata.",
      "type": "key_value_object",
      "is_array": true
    },
    "metrics": {
      "caption": "Metrics",
      "description": "Defines the key metrics used to evaluate system performance, cost, and other critical factors.",
      "type": "metric",
      "is_array": true
    },
    "mime_type": {
      "caption": "MIME Type",
      "description": "The MIME type of the content. For example: <code>application/json</code>, <code>text/plain</code>.",
      "type": "mime_t"
    },
    "model": {
      "caption": "Model",
      "description": "Name of the LLM model including its version (e.g., 'gpt-3.5-turbo').",
      "type": "string_t"
    },
    "module_data": {
      "caption": "Data",
      "description": "Data associated with the module.",
      "type": "json_t"
    },
    "modules": {
      "caption": "Modules",
      "description": "List of modules that describe a record and its capabilities more in depth.",
      "type": "class_t",
      "class_type": "base_module",
      "family": "module",
      "is_enum": true,
      "is_array": true
    },
    "name": {
      "caption": "Name",
      "description": "The name of the entity. See specific usage.",
      "type": "string_t"
    },
    "observability_data": {
      "caption": "Data",
      "description": "Data supported by the agent for observability.",
      "type": "observability_data"
    },
    "observability_data_schema": {
      "caption": "Supported Data Schema",
      "description": "Data schema supported by the agent for observability.",
      "type": "observability_data_schema"
    },
    "openapi_schema_object": {
      "caption": "OpenAPI Schema Object",
      "description": "An instance of an OpenAPI schema object, formatted as per the OpenAPI specs.",
      "type": "json_t",
      "references": [
        {
          "description": "OpenAPI Schema Object",
          "url": "https://spec.openapis.org/oas/v3.1.1.html#schema-object"
        }
      ]
    },
    "openapi_security_scheme": {
      "caption": "OpenAPI Security Scheme",
      "description": "This object contains an instance of an OpenAPI schema object, formatted as per the OpenAPI specs.",
      "type": "openapi_security_scheme",
      "references": [
        {
          "description": "OpenAPI Security Scheme Object",
          "url": "https://spec.openapis.org/oas/v3.1.1.html#security-scheme-object-0"
        }
      ]
    },
    "overall_rating": {
      "caption": "Overall Rating",
      "description": "Overall rating.",
      "type": "float_t"
    },
    "overall_scores": {
      "caption": "Overall Scores",
      "description": "Overall scores of the Agent across all evaluation.",
      "type": "overall_scores"
    },
    "path": {
      "caption": "Path",
      "description": "The path that pertains to the class or object. See specific usage.",
      "type": "string_t"
    },
    "previous_record_cid": {
      "caption": "Previous Record CID",
      "description": "Content Identifier (CID) of an Record's parent record.",
      "type": "uuid_t"
    },
    "priority": {
      "caption": "Priority",
      "description": "Value that indicates a priority of an entity. See specific usage.",
      "type": "unit_interval_t"
    },
    "protocol": {
      "caption": "ACP Endpoint",
      "description": "ACP endpoint description.",
      "type": "acp_endpoint"
    },
    "provider": {
      "caption": "Provider",
      "description": "Name of the provider of a service, tool, object, etc. See specific usage.",
      "type": "string_t"
    },
    "publisher": {
      "caption": "Publisher",
      "description": "Publisher.",
      "type": "publisher"
    },
    "quality_score": {
      "caption": "Quality Score",
      "description": "Overall score.",
      "type": "float_t"
    },
    "record_signature": {
      "caption": "Signature",
      "description": "A digitital signature is used to verify the authenticity and integrity of the data. See specific usage.",
      "type": "record_signature"
    },
    "referred_evaluations": {
      "caption": "Referred evaluations",
      "description": "Evaluations associated to the Agent.",
      "type": "referred_evaluation",
      "is_array": true
    },
    "required": {
      "caption": "Required",
      "description": "Indicates whether the item is required or not. See specific usage.",
      "type": "boolean_t"
    },
    "schema_version": {
      "caption": "Schema Version",
      "description": "Version of the OASF schema.",
      "type": "string_t"
    },
    "scope": {
      "caption": "Scope",
      "description": "Boundary or permission within which an entity can operate in. See specific usage.",
      "type": "string_t"
    },
    "scopes": {
      "caption": "Scopes",
      "description": "Boundaries or permissions within which an entity can operate in. See specific usage.",
      "type": "string_t",
      "is_array": true
    },
    "security_score": {
      "caption": "Security Score",
      "description": "Security score.",
      "type": "float_t"
    },
    "signature": {
      "caption": "Signature",
      "description": "Base64-encoded signature.",
      "type": "bytestring_t"
    },
    "signed_at": {
      "caption": "Signed Time",
      "description": "Timestamp when signing occurred. See specific usage.",
      "type": "datetime_t"
    },
    "size": {
      "caption": "Size",
      "description": "The size of data, in bytes.",
      "type": "long_t"
    },
    "skills": {
      "caption": "Skills",
      "description": "Skills that apply to an agent.",
      "type": "class_t",
      "class_type": "base_skill",
      "family": "skill",
      "is_enum": true,
      "is_array": true
    },
    "title": {
      "caption": "Title",
      "description": "A human-friendly title for the object.",
      "type": "string_t"
    },
    "type": {
      "caption": "Type",
      "description": "The type of an object or value, normalized to the caption of the type_id value. In the case of 'Other', it is defined by the source. See specific usage.",
      "type": "string_t"
    },
    "unit_of_measurement": {
      "caption": "Unit of Measurement",
      "description": "The unit in which the metric is measured (for example, 'seconds', 'bytes', or 'percentage').",
      "type": "string_t"
    },
    "uri": {
      "caption": "URI",
      "description": "The URI object that pertains to the class or object. See specific usage.",
      "type": "uri_t"
    },
    "url": {
      "caption": "URL",
      "description": "The URL object that pertains to the class or object. See specific usage.",
      "type": "url_t"
    },
    "value": {
      "caption": "Value",
      "description": "The value associated to an attribute. See specific usage.",
      "type": "string_t"
    },
    "values": {
      "caption": "Values",
      "description": "List of key/value pairs.",
      "type": "key_value_object",
      "is_array": true
    },
    "version": {
      "caption": "Version",
      "description": "The version that pertains to the class or object. See specific usage.",
      "type": "string_t"
    }
  },
  "types": {
    "caption": "Data Types",
    "description": "The data types available in OASF. Each data type specifies constraints in the form regular expressions, max lengths or value limits. Implementers of OASF should ensure they abide to these constraints.",
    "attributes": {
      "boolean_t": {
        "caption": "Boolean",
        "description": "Boolean value. One of <code>true</code> or <code>false</code>.",
        "values": [
          false,
          true
        ]
      },
      "bytestring_t": {
        "caption": "Byte String",
        "description": "Base64 encoded immutable byte sequence.",
        "type": "string_t",
        "type_name": "String"
      },
      "class_t": {
        "caption": "Class",
        "description": "Name of the class associated to an attribute."
      },
      "datetime_t": {
        "caption": "Datetime",
        "description": "The Internet Date/Time format as defined in <a target='_blank' href='https://www.rfc-editor.org/rfc/rfc3339.html'>RFC-3339</a>. For example:<br><code>2024-09-10T23:20:50.520Z</code>,<br><code>2024-09-10 23:20:50.520789Z</code>.",
        "regex": "^\\d{4}-\\d{2}-\\d{2}[Tt]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?([Zz]|[\\+-]\\d{2}:\\d{2})?$",
        "type": "string_t",
        "type_name": "String"
      },
      "email_t": {
        "caption": "Email Address",
        "description": "Email address. For example:<br><code>john_doe@example.com</code>.",
        "regex": "^[a-zA-Z0-9!#$%&'*+-/=?^_`{|}~.]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
        "type": "string_t",
        "type_name": "String"
      },
      "file_hash_t": {
        "caption": "Hash",
        "description": "Hash. A unique value that corresponds to the content of the file, image, ja3_hash or hassh found in the schema. For example:<br> MD5: <code>3172ac7e2b55cbb81f04a6e65855a628</code>.",
        "regex": "^sha256:[a-fA-F0-9]+$",
        "type": "string_t",
        "type_name": "String"
      },
      "file_name_t": {
        "caption": "File Name",
        "description": "File name. For example:<br><code>text-file.txt</code>.",
        "type": "string_t",
        "type_name": "String"
      },
      "float_t": {
        "caption": "Float",
        "description": "Real floating-point value. For example:<br><code>3.14</code>."
      },
      "integer_t": {
        "caption": "Integer",
        "description": "Signed integer value."
      },
      "ip_t": {
        "max_len": 40,
        "caption": "IP Address",
        "description": "Internet Protocol address (IP address), in either IPv4 or IPv6 format. For example:<br><code>192.168.200.24</code>, <br> <code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code>.",
        "regex": "((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))",
        "type": "string_t",
        "type_name": "String"
      },
      "json_t": {
        "caption": "JSON",
        "description": "Embedded JSON value. A value can be a string, or a number, or true or false or null, or an object or an array. These structures can be nested. See <a target='_blank' href='https://www.json.org'>www.json.org</a>."
      },
      "long_t": {
        "caption": "Long",
        "description": "8-byte long, signed integer value."
      },
      "mac_t": {
        "max_len": 32,
        "caption": "MAC Address",
        "description": "Media Access Control (MAC) address. For example:<br><code>18:36:F3:98:4F:9A</code>.",
        "regex": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
        "type": "string_t",
        "type_name": "String"
      },
      "mime_t": {
        "caption": "MIME Type",
        "description": "MIME type of the content. For example:<br><code>application/json</code>,<br><code>text/plain</code>.",
        "regex": "^([a-zA-Z0-9!#$%&'*+\\-.^_`|~]+/)?[a-zA-Z0-9!#$%&'*+\\-.^_`|~]+$",
        "type": "string_t",
        "type_name": "String"
      },
      "port_t": {
        "caption": "Port",
        "description": "The TCP/UDP port number. For example:<br><code>80</code>,<br><code>22</code>.",
        "type": "integer_t",
        "type_name": "Integer",
        "range": [
          0,
          65535
        ]
      },
      "process_name_t": {
        "caption": "Process Name",
        "description": "Process name. For example:<br><code>Notepad</code>.",
        "type": "string_t",
        "type_name": "String"
      },
      "resource_uid_t": {
        "caption": "Resource UID",
        "description": "Resource unique identifier. For example, S3 Bucket name or EC2 Instance ID.",
        "type": "string_t",
        "type_name": "String"
      },
      "string_map_t": {
        "caption": "String Map",
        "description": "A map of string to string."
      },
      "string_t": {
        "caption": "String",
        "description": "UTF-8 encoded byte sequence."
      },
      "subnet_t": {
        "max_len": 42,
        "caption": "Subnet",
        "description": "The subnet represented in a CIDR notation, using the format network_address/prefix_length. The network_address can be in either IPv4 or IPv6 format. The prefix length indicates the number of bits used for the network portion, and the remaining bits are available for host addresses within that subnet. For example:<br><code>192.168.1.0/24</code>,<br><code>2001:0db8:85a3:0000::/64</code>",
        "type": "string_t",
        "type_name": "String"
      },
      "timestamp_t": {
        "caption": "Timestamp",
        "description": "The timestamp format is the number of milliseconds since the Epoch 01/01/1970 00:00:00 UTC. For example:<br><code>1618524549901</code>.",
        "type": "long_t",
        "type_name": "Long"
      },
      "unit_interval_t": {
        "caption": "Unit Interval",
        "description": "Unit interval is defined as the closed interval, which includes all real numbers greater than or equal to 0 and less than or equal to 1.",
        "type": "float_t",
        "type_name": "Float",
        "range": [
          0,
          1
        ]
      },
      "uri_t": {
        "caption": "URI String",
        "description": "Uniform Resource Identifier (URI) string. For example:<br><code>file://hostname/sharename/example.pdf</code>.",
        "type": "string_t",
        "type_name": "String"
      },
      "url_t": {
        "caption": "URL String",
        "description": "Uniform Resource Locator (URL) string. For example:<br><code>http://www.example.com/download/trouble.exe</code>.",
        "type": "string_t",
        "type_name": "String"
      },
      "username_t": {
        "caption": "User Name",
        "description": "User name. For example:<br><code>john_doe</code>.",
        "type": "string_t",
        "type_name": "String"
      },
      "uuid_t": {
        "caption": "UUID",
        "description": "128-bit universal unique identifier. For example:<br><code>123e4567-e89b-12d3-a456-42661417400</code>.",
        "regex": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
        "type": "string_t",
        "type_name": "String"
      }
    }
  }
}
