# SPDX-FileCopyrightText: Copyright (c) 2025 Cisco and/or its affiliates.
# SPDX-License-Identifier: Apache-2.0

name: Release

on:
  workflow_call:
    inputs:
      image_repo:
        required: true
        type: string
        description: "Image repo to use."
      image_tag:
        required: true
        type: string
        description: "Image tag to use."
      release_tag:
        required: true
        type: string
        description: "Release tag for all components."
      artifact_path:
        required: true
        type: string
        description: "Path from where to download image artifacts."
      helm-version:
        required: false
        default: "3.12.1"
        type: string
        description: 'Helm version'

jobs:
  images:
    name: Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Download artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: ${{ inputs.artifact_path }}
          path: artifacts
          pattern: "*.tar"
          merge-multiple: true

      - name: Load images to local Docker registry
        run: |
          ls -la artifacts
          for image_archive in artifacts/*.tar; do
            docker load --input "$image_archive"
          done
          docker images

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: notused
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Release images
        env:
          IMAGE_REPO: ${{ inputs.image_repo }}
          IMAGE_TAG: ${{ inputs.image_tag }}
          RELEASE_TAG: ${{ inputs.release_tag }}
        run: |
          task release -y

  chart:
    name: Helm chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: notused
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Setup Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: ${{ inputs.helm-version }}

      - name: Helm update
        shell: bash
        run: helm dependency update install/charts/oasf

      - name: Helm lint
        shell: bash
        run: helm lint install/charts/oasf --with-subcharts

      - name: Set chart name
        id: chart-name
        shell: bash
        run: echo "value=${{ github.event.repository.name }}" >> "$GITHUB_OUTPUT"

      - name: Helm package
        shell: bash
        run: |
          helm package install/charts/oasf --dependency-update --version ${{ inputs.release_tag }}

      - name: Helm push to GHCR OCI registry
        shell: bash
        run: |
          echo "ðŸš§ Pushing ${{ inputs.release_tag }} to GHCR OCI registry"
          helm push ${{ steps.chart-name.outputs.value }}-${{ inputs.release_tag }}.tgz oci://${{ inputs.image_repo }}/oasf/helm-charts

  release:
    name: Release
    needs:
      - images
      - chart
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN  }}
        with:
          tag_name: ${{ inputs.release_tag }}
          release_name: Release ${{ inputs.release_tag }}
          draft: true
          prerelease: false
